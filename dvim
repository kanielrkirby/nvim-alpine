#!/bin/bash



# ================================
# Variables
# ================================
CMD=""

# ================================
# Configuration
# ================================
image_name="nvim-alpine"
main_container_name="nvim-main"
resource_dir="$HOME/.local/share/nvim-alpine"
source $resource_dir/config.cfg

# ================================
# Set Builder
# ================================
builder=""

if [ "$CONTAINERIZER" == "docker" ]; then
    if which docker-buildx > /dev/null 2>&1; then
	builder="docker-buildx"
    else
        builder="docker"
    fi
elif [ "$CONTAINERIZER" == "nerdctl" ]; then
    builder="nerdctl"
    if [ ! -d "/opt/cni/bin" ]; then
        echo "CNI plugins not found. Please install CNI plugins before proceeding."
        exit 1
    fi
fi

# ================================
# Set Path
# ================================
real=""
if [ ! -z "$1" ]; then
    real="$(realpath $1)"
else
    real="$(realpath .)"
fi
path=""
nvim_path=""

if [ -d "$real" ]; then
    if [ -z "$1" ]; then
        nvim_path=""
    else
        nvim_path=" ."
    fi
    path="$real"
else
    nvim_path=" $(basename $real)"
    path="$(dirname $real)"
fi
echo $real
echo $path
echo $nvim_path

# ================================
# Pre-checks
# ================================
if [ ! -d "$resource_dir" ]; then
    mkdir "$resource_dir"
fi

# ================================
# Image and Container Checks
# ================================
if [ -z "$($CONTAINERIZER images -q $image_name)" ]; then
    echo "Image does not exist. Building now..."
    CMD="$builder build -t $image_name $resource_dir"
    $CMD
fi

if [ ! "$($CONTAINERIZER ps -aq -f name=$main_container_name)" ]; then
    echo "Container does not exist. Creating now..."
    CMD="$CONTAINERIZER run -d \
        --name $main_container_name \
        -v $resource_dir/.config/nvim:/root/.config/nvim \
        -v nvim_state:/root/.local/state/nvim \
        -v nvim_share:/root/.local/share/nvim \
        -v $resource_dir/clipboard.txt:/root/clipboard-sync/clipboard.txt \
        $image_name"
    $CMD
fi

# ================================
# Clipboard Sync
# ================================
(file_path="$resource_dir/clipboard.txt"
while true; do
    content=$(cat "$file_path" | sed -e '$ d')
    if [ "$content" != "" ]; then
        if [ -n "$(command -v pbcopy)" ]; then
            pbcopy < "$file_path"
        elif [ -n "$(command -v xclip)" ]; then
            xclip -selection clipboard < "$file_path"
        elif [ -n "$(command -v xsel)" ]; then
            xsel --clipboard < "$file_path"
        else
            break
        fi
        echo "" > "$file_path"
    fi
    sleep 1
done) &

clipboard_pid=$!

# ================================
# Run nvim
# ================================
CMD="$CONTAINERIZER run --rm -it \
    --volumes-from $main_container_name \
    -v $path:/mnt/volume \
    --workdir /mnt/volume \
    $image_name nvim$nvim_path"
$CMD

# ================================
# Cleanup
# ================================
kill $clipboard_pid

